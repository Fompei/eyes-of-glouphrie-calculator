# ------------------------------------------------------
# TURN .PY TO .EXE
# validatecommand for SpinBox

# THIS IS FOR CHECKING IF CURRENT INVENTORY HAS SOLUTION
# WHAT IF PERSON HAS ITEMS THAT CAN BE CHANGED TO A SOLUTION?
# USE OF TUPLES, LISTS, DICTIONARY

# TIE THE WIDGET WITH THE COLOR + SHAPE IN A DICTIONARY???

# HOW SHOULD I IMPLEMENT SOLUTION?
# SHOULD I GO IN ORDER... LETS SAY FIRST LOCK USES A RED CIRCLE
# THAT MEANS ITS TAKEN AWAY FROM THE SOLUTIONS OF SECOND, THIRD, FOURTH LOCKS

# COULD OF JUST ITERATED THROUGH DICTIONARY AND ADDED COUNTS, INSTEAD OF DOING SPIN_COUNT ARRAY

# THE PROGRAM DOESNT GIVE ALL COMBINATIONS OF SOLUTIONS
# RATHER IT TRIES TO SOLVE THE LOCKS IN ORDER AND DELETES THE SHAPE NEEDED FOR THAT LOCK
# THE SUBSEQUENT LOCKS DONT HAVE ACCESS TO THAT SHAPE ANYMORE
# WHAT IF THERE ARE MULTIPLE SOLUTIONS? THAT IS SOMETHING I HAVENT DECIDED UPON YET

# IF I ORDERED THE DICT, THEN I COULDVE USED BINARY SEARCH TO LOOK FOR 1 SHAPE FOR FIRST AND SECOND LOCK

# LETS SAY YOU DO RETURN ALL POSSIBLE SOLUTIONS TO THE USER WITHOUT TAKING AWAY SHAPES USED FROM OTHER LOCKS
# EHH, THAT MEANS THEY WILL HAVE TO FIND A SOLUTION OUT OF THE SOLUTIONS YOU GIVE THEM...
# NOT REALLY WANTED. THEY JUST WANT YOU TO TELL THEM THE ANSWER
# SO, WE DO TAKE AWAY A SHAPE AFTER ITS BEEN USED. THAT ALSO MEANS WE SHOULD STOP AFTER FINDING ONE SOLUTION
# OR ELSE THE SUBSEQUENT LOCKS WONT HAVE ANY SOLUTIONS BECAUSE A PREVIOUS LOCK MIGHT BE TAKING A BUNCH OF SHAPES

# HAVE MOUSEOVER OF COLOR AND SHAPE
# HAVE LOCK SHAPE #

#bad format of gui -- nothing instead of 0
#making rows to solution more visible
#mousing over shape and their names
#no solution = more visible that there are no solutions??
#py to exe
#didnt do OOP
#------------------------------------------------
